name: Build and Update SoccerAnalytics

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: make lint

      - name: Determine snapshot version
        id: snapshot_version
        run: |
          git fetch --tags
          last_tag=$(git tag --list "v*" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          last_tag=${last_tag#v}
          IFS='.' read -r major minor patch <<< "$last_tag"
          snapshot_version="$major.$minor.$patch-snapshot"
          echo "snapshot_version=$snapshot_version" >> $GITHUB_OUTPUT
          
      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version in PR
        run: |
          sed -i "s/version='[^']*'/version='${{ steps.snapshot_version.outputs.snapshot_version }}'/" setup.py
          git add setup.py
          git commit -m "Update version to ${{ steps.snapshot_version.outputs.snapshot_version }}" || echo "No changes to commit"
          git push

  post_merge:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Generate GitHub App token
        id: get_app_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Determine new release version
        id: release_version
        run: |
          last_tag=$(git tag --list "v*" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          last_tag=${last_tag#v}
          IFS='.' read -r major minor patch <<< "$last_tag"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          tag_version="v$new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "tag_version=$tag_version" >> $GITHUB_OUTPUT

      - name: Create release branch and commit bump
        run: |
          git config user.name "github-app[bot]"
          git config user.email "github-app[bot]@users.noreply.github.com"

          branch_name="release/${{ steps.release_version.outputs.new_version }}"
          git checkout -b "$branch_name"

          sed -i "s/version='[^']*'/version='${{ steps.release_version.outputs.new_version }}'/" setup.py
          git add setup.py
          git commit -m "Release: bump version to ${{ steps.release_version.outputs.new_version }}"

          git push https://x-access-token:${{ steps.get_app_token.outputs.token }}@github.com/${{ github.repository }} HEAD:"$branch_name"

      - name: Create PR for release bump
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.get_app_token.outputs.token }}
          branch: "release/${{ steps.release_version.outputs.new_version }}"
          base: main
          title: "Release v${{ steps.release_version.outputs.new_version }}"
          body: "Automatic PR to bump version to v${{ steps.release_version.outputs.new_version }}"
          labels: "release"
          commit-message: "Release: bump version to ${{ steps.release_version.outputs.new_version }}"

      - name: Create tag (optional)
        run: |
          git tag -f "${{ steps.release_version.outputs.tag_version }}"
          git push https://x-access-token:${{ steps.get_app_token.outputs.token }}@github.com/${{ github.repository }} --tags
